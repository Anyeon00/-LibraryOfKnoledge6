응답 데이터를 만드는 방법 3가지
1. 정적 리소스 - 정적인 웹페이지(HTML,CSS,JS)를 제공할 때
2. 뷰 템플릿(Thymeleaf) - 동적인 HTML을 제공할 때
3. JSON 형식 데이터
3<- 이거 @ResponseBody얘기인가


[응답 - 정적 리소스, 뷰 템플릿]
1. 정적 리소스 (HTML, CSS, JS 파일)

스프링 부트는 다음 디렉토리들에 있는 정적 리소스를 제공
src/main/resources의 하위 폴더인
/static, /public, /resources, /META-INF/resources (네 가지)

웹브라우저에서 접근 경로 : 아래 예시 참고
ex) /static 폴더 하위 경로에 있는 html 파일인 경우
프로젝트 경로 : src/main/resources/static/basic/hello-form.html
-> Url 주소 : http://localhost:8080/basic/hello-form.html



2. 뷰 템플릿 (Thymeleaf, JSP) 등 _뷰 템플릿을 거쳐서 동적으로 Html이 생성됨

스프링 부트는 다음 디렉토리에 있는 뷰 템플릿을 제공
src/main/resources/templates

* 뷰 논리 이름 : 아래 예시 참고
ex) 
프로젝트 경로 : src/main/resources/templates/response/hello.html
뷰 논리 이름 : response/hello

* 컨트롤러에서 사용 예 ex)
@RequestMapping("/response-view-v2")
public String responseViewV2(Model model){
  model.addAttribute("data", "hello!");

  return "response/hello";	//@Controller에서 String반환시 view논리 이름으로 사용(섹션6-2)
}



[HTTP 응답 - HTTP API, 메시지 바디에 직접 입력]
3. JSON 형식 데이터

방법 1. @ResponseBody 사용
- 섹션 6-5 HTTP 요청 메시지 - JSON 파트 참고 (예시포함)
- return type을 String으로 쓰면, 해당 String이 JSON 타입으로 변환됨
- @ResponseStatus(HttpStatus.OK) 처럼 HTTP 상태코드 설정 가능(메서드 위에) _동적으로 정하려면 ResponseEntity이용
- 메시지 컨버터 섹션6-7 참고
	
방법 2. @RestController 사용 (클래스 단위에)
- 해당 컨트롤러에 모두 @ResponseBody 적용 효과 _@ResponseBody : JSON 형태로 변환하여 return
- 이름 그대로 Rest API를 만들 때 사용하는 컨트롤러
