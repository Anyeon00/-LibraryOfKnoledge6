[HTTP 요청 파라미터 - 쿼리 파라미터, HTML Form]

클라이언트가 HTTP 요청 메시지를 통해 데이터를 서버로 전달하는 방법 3가지
*스프링 MVC 1편-1 - 섹션2 - HTTP요청데이터 참고

1. GET - 쿼리 파라미터 (검색, 필터, 페이징등에 많이 사용)
ex) /url?username=hello&age=20

2. POST - HTML Form (회원가입하거나 상품주문에 많이 사용)
ex) http메시지 바디 - username=hello&age=20

3. POST - HTTP 메시지 바디 (HTTP API에서 주로 사용, JSON형태)
ex) http메시지 바디 - json형식으로 변환된 데이터



[HTTP 요청 파라미터 - @RequestParam]

요청 파라미터 조회 : 위 3가지 중, 1번, 2번 방법(데이터를 쿼리파라미터 형식으로 전달)을 통해 클라이언트가 전송한 데이터를 꺼내는 방법
*3번 방법은 6-5부터

1. @RequestParam 어노테이션 이용
ex) 데이터 "username"과 "age"를 요청(위 1, 2번 전달방법 사용시)
@RequestMapping("/request-param-v2")
public String requestParamV2(
			@RequestParam("username") String memberName
			@RequestParam("age") int memberAge){
  log.info("username={}, age={}", memberName, memberAge);
  
  return "ok";
}
* 1번 전달방법 사용시 /request-param-v2?username=kim&age=20 라는 url을 요청
* 2번 전달방법 사용시 Html Form의 입력칸을 통해 요청

2. 더 간단한 방법
@RequestParam("username") String memberName 에서, 
변수 이름이 데이터 이름과 같으면, ("username") 생략가능
ex) @RequestParam String username

3. 필수 파라미터 설정
@RequestParam속성을 통해 필수 파라미터 여부를 지정 가능
ex) @RequestParam(required = true)
* 근데 기본값이 true임
* int 파라미터에 required = false하고 싶으면, int를 Integer타입으로 사용

4. 파라미터 디폴트 값 지정
required속성이 false인 파라미터에 값이 안들어왔을 때(null일때) 사용할 디폴트 값 지정 가능
@RequestParam의 속성을 통해 지정 가능
ex) @RequestParam(required = false, defaultValue = "guest") String username

5. 파라미터들을 Map으로 한번에 받기
MultiValueMap이용
ex)
파라미터부분: @RequestParam MultiValueMap<String, Object> paramMap
메서드안에서 사용: String name = paramMap.get("username");
int age = paramMap.get("age");
...


[HTTP 요청 파라미터 -@ModelAttribute]

6. @ModelAttribute를 이용하는 방법
사용이유 
: 컨트롤러 메서드에서 로직 처리후, 보낼 데이터를 "DTO객체"에 넣어서 사용함
-> @ModelAttribute 어노테이션을 사용하면, Model객체 생성과 객체에 데이터 넣기 자동화

방법
-1. DTO 객체 클래스 작성
ex)
@Data
public class HelloData{
  private String username;  //변수명이 http메시지의 데이터이름(key)와 이름이 같아야함
  private int age;
}
* @Data : @Getter, @Setter, @ToString, @EqualsAndHashCode, @RequiredArgsContructor를 자동 적용해주는 롬복

-2. @RequestParam 어노테이션 대신 @ModelAttribute 사용
ex)
@RequestMapping("/model-attribute-v1")
public String modelAttribute(@ModelAttribute HelloData helloData){
  //6-1에서 만든 DTO객체와 함께 사용
  //DTO클래스의 데이터멤버들을 파라미터로 받음

  log.info("HelloData={}", helloData);	// DTO객체 클래스의 @Data에 toString기능
  return "ok";
}


* @ModelAttribute 생략가능
ex) public String modelAttribute(HelloData helloData)

* @RequestParam도 생략가능한데 어떻게 구분하냐
- String, int, Integer 같은 단순 타입 : @RequestParam
- 내가 직접 만든 @Data 객체 타입 : @ModelAttribute








