[웹 서버, 웹 애플리케이션 서버]

Web Server 
: 정적 리소스 제공(HTML, CSS, JS, 이미지, ...)

Web Application Server (WAS)
: 프로그램 코드를 실행해서 어플리케이션 로직을 수행할 수 있는 서버

*웹 서버는 정적 리소스, WAS는 애플리케이션 로직을 실행하는 서버



웹 시스템 구성 : WEB Server - WAS - DB
* WAS가 죽어도 웹서버가 오류화면 출력가능


[서블릿]
* 서버로서 동작하기 위한 작업 :

Tcp/ip연결, 소켓연결
Client가보낸 Http메시지(헤더와 바디등등) parsing
"비즈니스로직실행"
Http메시지생성
Tcp/ip에 전달, 소켓종료

서블릿이 여기서 "비즈니스로직실행"외에 모든일을 처리해줌
-> 1. Http메시지를 받아서 Request객체를 생성해 넘겨줌
2. 서블릿 컨테이너가 받아서 "비즈니스 로직"을 처리해 Response객체로 다시 넘겨줌
3. Response객체로 Http메시지를 생성해 반환함

서블릿 사용법
: 1. extends HttpServlet
2. @Override protected void service(HttpServletRequest request, HttpServletResponse response){}


[동시 요청 - 멀티 쓰레드]

위에서 정확히는 서블릿 컨테이너의 서블릿 객체를 호출함
이 서블릿 객체는 쓰레드가 호출함

요청마다 쓰레드 생성 시
- 클라이언트 요청마다 쓰레드가 생성되어 서블릿 객체에 넘겨줌
- 문맥교환 비용 발생
- 쓰레드 생성에 제한이 없어 메모리 오버플로우 발생 가능
-> 쓰레드 풀 : 쓰레드풀에 미리 쓰레드를 N개 만들어 놓음, 그리고 가져다 씀

=> WAS의 주요 튜닝 포인트 : 쓰레드 풀의 쓰레드 갯수 설정
(서비스 로직 복잡도, CPU, 메모리 상황 등에 따라 다름, 성능 테스트를 통해 결정_툴이 있음)

* WAS는 멀티 쓰레드를 지원함

* 정확히는 모르겠는데 WAS = Servlet이라고 생각하는걸로






