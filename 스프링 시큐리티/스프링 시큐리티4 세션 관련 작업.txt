그래 로그인까지 됐다
근데 그럼 그 세션은 어디 감? 어디 저장됏단거?
지금 쿠키랑 세션을 썼나? -> 로그인해보면 쿠키가 들어옴

[9 세션 사용자 아이디 정보]	* 로그인 후 url 요청시, 해당 페이지에 유저 정보 사용
요청메서드에서 받은 쿠키로 세션에서 해당 유저 꺼내기
(로그인 후 화면에 로그인 유저 정보를 나타내야할 때 등)

* 사용자 정보는 SecurityContextHolder에 의해 서버 세션에 관리됨

세션 현재 사용자 아이디 꺼내기
String id = SecurityContextHolder.getContext().getAuthentication().getName();

세션 현재 사용자 Role 꺼내기
Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
Collection<? extends GrantedAuthority> authorities = authentication.getAuthorities();
Iterator<? extends GrantedAuthority> iter = authorities.iterator();
GrantedAuthority auth = iter.next();

String role = auth.getAuthority();


[10 세션 설정(소멸,중복 로그인,고정 보호)]		*7. 세션 관리

세션의 소멸 시간
아이디당 세션 생성 개수(다중 로그인 시)

세션 소멸 시간 설정	_스프링MVC2편 섹션6 [세션 정보와 타임아웃 설정]참고
- 사용자가 서버에 무언가 요청한 시간 기준으로 설정 시간만큼 유지
- ex) application.properties에 
server.servlet.session.timeout=1800 #1800초

다중 로그인 관리
동일한 아이디로 다중 로그인을 진행할 경우
(통제할지, 말지, 허용하면 몇개나 허용할지)
ex) 이전에 만든 SecurityConfig 클래스의 public SecurityFilterChain filterChain() 메서드 안에서
http.sessionManagement((auth) -> auth
		.maximumSessions(1)
		.maxSessionsPreventsLogin(true));
* maximumSession() : 하나의 아이디에 대한 다중 로그인 허용 개수
* maxSessionPreventsLogin() : 다중 로그인 개수를 초과했을때, true면 새 로그인 차단, false면 기존 세션 하나 삭제

세션 고정 보호
- 세션 고정 공격 : 해커가 관리자 세션id를 탈취하는 것을 방지
- 세션 고정 공격을 보호하기 위한 로그인 성공시 세션 설정 방법은 sessionManagement()메서드의 sessionFixation()메서드를 통해 설정
ex)
sessionManagement().sessionFixation().none() : 로그인 시 세션 정보 변경 안함(위험)
sessionManagement().sessionFixation().newSession() : 로그인 시 세션 새로 생성
sessionManagement().sessionFixation().changeSessionId() : 로그인 시 동일 세션에 대한 id 변경(해커의 쿠키(세션id)에서 다시 사용자의 쿠키로 변경)
- 구현 ex) 마찬가지로 이전에 만든 SecurityConfig클래스의 public SecurityFilterChain filterChain()메서드 안에서
http.sessionManagement((auth) -> auth
		.sessionFixation().changeSessionId());




