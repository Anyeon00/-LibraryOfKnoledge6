강의 링크 : https://www.youtube.com/watch?v=y0PXQgrkb90&list=PLJkjrxxiBSFCKD9TRKDYn7IE96K2u3C3U&index=1

스프링 시큐리티를 활용하여 인증/인가를 구현하고 회원 정보 저장은 MySQL을 활용하여 구현한다. (세션 방식)

인증 : 로그인
인가 : 경로별 접근 권한
회원가입

동작 원리
필터에서 권한으로 필터링(WAS와 서블릿 사이), 


[2 프로젝트 생성]
* localhost:8080으로 접속시, 스프링 시큐리티로 인해 로그인페이지가 나타남
이때 id = user, pwd = 콘솔창에 나온거 복붙하면 로그인 됨


[3 Security Config 인가 작업]	*1. 특정 경로 인가 작업

어떤 경로에 대한 접근을 인가된 유저에게만 허용하는 작업
* 인가 : 특정한 경로에 요청이 오면 필터에서 Spring Security가 검증
* 기본 값 : 모든 경로에 대해 로그인 필요

커스텀 필터 만들기
1. config패키지 생성 후 SecurityConfigClass 생성 
2. 클래스 단위에 @Configuration, @EnableWebSecurity 작성
(빈 등록&주입해주는 코드 작성하는 클래스 어노테이션, 스프링시큐리티 어노테이션)
3. 빈 등록&주입 메서드 생성 (여기서 필터 구현)
ex)
@Bean
public SecurityFilterChain filterChain(HttpSecurity http) throws Exception{
	return http.build();		//return statement 마지막에 넣어줘야함
}
4. 위 메서드 안에 "특정 경로에 대한 인가 로직" 구현
ex)
http.authorizeHttpRequests((auth) -> auth
		.requestMatchers("/", "/login").permitAll()	//루트, 로그인 페이지
		.requestMatchers("/admin").hasRole("ADMIN")	//admin페이지
		.requestMatchers("/mypage/**").hasAnyRole("ADMIN", "USER")	//마이페이지
		.anyRequest().denyAll()
	);

- authorizeHttpRequests() : 특정 경로에 대한 인가 작업 메서드
- requestMatchers(경로들) : 경로들에 대한 권한 설정
- anyRequest() : requestMatchers에 사용된 경로들 제외한 나머지 경로들

- permitAll() : requestMatchers의 경로들에 모든 사용자에게 접근 허용
- authenticated() : requestMatchers의 경로들에 로그인만 하면 접근 허용
- hasRole() : requestMatchers의 경로들에 로그인&특정한 Role이 있어야 접근 허용
- hasAnyRole() : requestMatchers의 경로들에 로그인&여러가지 Role들에게 접근 허용
- denyAll() : requestMatchers의 경로들에 모든 사용자들의 접근 거부
* 메서드 순서대로 실행되므로 주의
* 시큐리티 버전별 구현 방법 차이(https://www.youtube.com/watch?v=NdRVhOccuOs&list=PLJkjrxxiBSFCKD9TRKDYn7IE96K2u3C3U&index=4)


[4 커스텀 로그인 설정]		*2. 로그인페이지로 리다이렉팅
특정 경로에 권한이 없는 경우 로그인 페이지로 리다이렉팅 시키기
(이전까지만 진행한 경우, 오류페이지가 뜸)

1. 로직 구현
위 4번에 이어서
ex)
http.formLogin((auth) -> auth.loginPage("/login")
		.loginProcessingUrl("/loginProc")
		.permitAll()		// 왜 여기서 또 허용해줘야하는지?
	);

- formLogin() : 로그인 페이지로 리다이렉트 시키는 작업 메서드
- loginPage() : 리다이렉트하여 보낼 로그인페이지 경로 설정
- loginProcessingUrl() : 로그인폼으로 받은 데이터를 보낼 페이지 경로 설정








