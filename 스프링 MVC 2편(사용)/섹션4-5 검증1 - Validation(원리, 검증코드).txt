[Validator 분리1]
(지난 섹션4-4의 마지막 요약부분 5번에서) 값을 검증하는 로직을 작성하는 파트

파라미터로 온 값을 검증하는 로직이, 컨트롤러에서 존재하면 너무 복잡함
-> Validator클래스 생성
* Validator 인터페이스 구현

원리인것 같은데 궁금하면 나중에 강의 다시보기

=> 컨트롤러의 복잡한 검증 로직을 별도로 분리하자


[Validator 분리2]

@InitBinder : 컨트롤러에서 Validation 인터페이스를 대신 사용해주는 스프링기능
-> 대신 Validation 인터페이스를 호출해줌

@Validated : validator를 직접 호출하는 부분이 사라지고 대신 검증 대상 앞(파라미터에)에 @Validated가 붙음


*@Validated, @Valid 둘다 사용가능
@Validated는 스프링 전용, @Valid는 자바 표준 

=> 컨트롤러의 파라미터에 @Validated를 써주면, 그 파라미터를 검증하는 로직이 실행됨


[정리]
클라이언트 서버 양측 다 검증해줘야함

=> 진짜 검증로직은 다음 Bean Validation으로 하는듯